I"œ^<p>This article is based on the jupyter notebook script at <a href="https://github.com/jieunbyun/BNS-JT/blob/python/notebooks/power_house.ipynb">MBNPy GitHub respository</a>. </p>
<p>
The quantification and inference algorithm below has a complexity of $O(M^{N_p})$, where $M$ is the number of states and $N_p$ is the number of components that constitute paths from a house to substations. In other words, $N_p$ is the major bottleneck. Good news is that <b>however many the total number of structures and houses, what only matters in the end is simply the number of structures on the paths to a house.</b>
</p>

<p>
COMING SOON: Implementation to a full-scale system.
</p>

<h1 id="modules">Modules</h1>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">sys</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">random</span>
<span class="kn">import</span> <span class="nn">copy</span>
<span class="kn">import</span> <span class="nn">time</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="n">random</span><span class="p">.</span><span class="n">seed</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>

<span class="c1"># mbnpy toolkit
</span><span class="n">sys</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="sa">r</span><span class="s">"C:\Users\jb622s\git\BNS-JT\BNS_JT"</span><span class="p">)</span> 
<span class="kn">from</span> <span class="nn">BNS_JT</span> <span class="kn">import</span> <span class="n">cpm</span><span class="p">,</span> <span class="n">variable</span><span class="p">,</span> <span class="n">operation</span>
</code></pre></div></div>

<h1 id="problem">Problem</h1>
<h2 id="system">System</h2>
<figure>
<img src="/BNS-JT/assets/img/house_power_prob.png" style="width:400px" />
</figure>

<p>The system consists of two power substations $S_0$ and $S_1$, eight transmission line poles $P_0$, â€¦, $P_7$, and seven houses $H_0$, â€¦, $H_6$. The substations and poles may fail being subjected to hazard scenarios $H$. Once a hazard event occurs, repair works will take place with priorities $S_0$ â†’ $S_1$ â†’ $P_0$ â†’ $P_1$ â†’ â€¦ â†’ $P_6$. The works are done only for failed components, and repairing a component takes a day.</p>

<p>Of interest is the expected number of days of power cut for each house. A house has power when the substation and poles it is connected to all survive. For example, $H_0$ has access to power if $S_0$ and $P_0$ are both in operation, while $H_1$ does if $S_0$, $P_0$, and $P_1$ are all in operation. We note that houses $H_3$ and $H_4$ have access to both substations and get power when either of the two link-sets is available. For example, $H_3$ has power either $S_0$, $P_2$, and $P_3$ work together or $S_1$ and $P_4$ are in operation.</p>

<h2 id="bayesian-network-bn-graph">Bayesian network (BN) graph</h2>
<p>The BN graph can be set up as below:</p>
<figure>
<img src="/BNS-JT/assets/img/power_house_bn.png" style="width:400px" />
</figure>

<p>The hazard node $H$ affects damage states of components, $S_0$, $S_1$, $P_0$, â€¦, $P_7$. Then, damage state of a component $X$ decides the rapair timing (i.e. how many days after a hazard occurrence) of a corresponding component, $T^X$. $T^X$ is also affected by the timing of the component right before in the repair priority, e.g. $T_1^S$ is dependent on $T^S_0$ as $S_0$ is right before $S_1$ in the repair priority. Then, actual closure time of each component, $C^X$ is decided by the corresponding damage state $X$ and $T^X$. That is, if $X$ has failed, then the closure time is the same as $T^X$, while if it is not, the closure time is zero. Finally, each houseâ€™s duration of power cut, represneted by $H_0$, â€¦, $H_7$, is decided by the closure duration of components constituting their link-sets. For example, as aforementioned, teh first house has $S_0$ and $P_0$ in its link set, and therefore the node $H_0$ is connected to $C_0^S$ and $C^P_0$.</p>

<p>In the graph, random variables are represented by single border, while deterministic variables are represented by double border.</p>

<h1 id="modelling">Modelling</h1>

<h2 id="hazard-scenarios">Hazard scenarios</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">cpms</span><span class="o">=</span><span class="p">{}</span>
<span class="nb">vars</span><span class="o">=</span><span class="p">{}</span>

<span class="nb">vars</span><span class="p">[</span><span class="s">'haz'</span><span class="p">]</span> <span class="o">=</span> <span class="n">variable</span><span class="p">.</span><span class="n">Variable</span><span class="p">(</span> <span class="n">name</span><span class="o">=</span><span class="s">'haz'</span><span class="p">,</span> <span class="n">values</span><span class="o">=</span><span class="p">[</span><span class="s">'mild'</span><span class="p">,</span><span class="s">'medi'</span><span class="p">,</span><span class="s">'inte'</span><span class="p">]</span> <span class="p">)</span> <span class="c1"># values=(mild, medium, intense)
</span><span class="n">cpms</span><span class="p">[</span><span class="s">'haz'</span><span class="p">]</span> <span class="o">=</span> <span class="n">cpm</span><span class="p">.</span><span class="n">Cpm</span><span class="p">(</span> <span class="n">variables</span><span class="o">=</span><span class="p">[</span><span class="nb">vars</span><span class="p">[</span><span class="s">'haz'</span><span class="p">]],</span> <span class="n">no_child</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">C</span><span class="o">=</span><span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">]),</span> <span class="n">p</span><span class="o">=</span><span class="p">[</span><span class="mf">0.5</span><span class="p">,</span><span class="mf">0.2</span><span class="p">,</span><span class="mf">0.3</span><span class="p">]</span> <span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="nb">vars</span><span class="p">[</span><span class="s">'haz'</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">cpms</span><span class="p">[</span><span class="s">'haz'</span><span class="p">])</span>

</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>"Variable(name=haz, B=[{0}, {1}, {2}, {0, 1}, {0, 2}, {1, 2}, {0, 1, 2}], values=['mild', 'medi', 'inte'])"
Cpm(variables=['haz'], no_child=1, C=[[0]
 [1]
 [2]], p=[[0.5]
 [0.2]
 [0.3]]
</code></pre></div></div>

<h2 id="structural-damage">Structural damage</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Substations
</span><span class="n">n_subs</span> <span class="o">=</span> <span class="mi">2</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n_subs</span><span class="p">):</span>
    <span class="n">name</span> <span class="o">=</span> <span class="s">'xs'</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
    <span class="nb">vars</span><span class="p">[</span><span class="n">name</span><span class="p">]</span> <span class="o">=</span> <span class="n">variable</span><span class="p">.</span><span class="n">Variable</span><span class="p">(</span> <span class="n">name</span><span class="o">=</span><span class="n">name</span><span class="p">,</span> <span class="n">values</span><span class="o">=</span><span class="p">[</span><span class="s">'fail'</span><span class="p">,</span><span class="s">'surv'</span><span class="p">]</span> <span class="p">)</span> <span class="c1"># values=(failure, survival)
</span>    <span class="n">cpms</span><span class="p">[</span><span class="n">name</span><span class="p">]</span> <span class="o">=</span> <span class="n">cpm</span><span class="p">.</span><span class="n">Cpm</span><span class="p">(</span> <span class="n">variables</span> <span class="o">=</span> <span class="p">[</span><span class="nb">vars</span><span class="p">[</span><span class="n">name</span><span class="p">],</span> <span class="nb">vars</span><span class="p">[</span><span class="s">'haz'</span><span class="p">]],</span> <span class="n">no_child</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span>
                      <span class="n">C</span><span class="o">=</span><span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">],</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">],</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">]])</span> <span class="p">)</span>

<span class="n">cpms</span><span class="p">[</span><span class="s">'xs0'</span><span class="p">].</span><span class="n">p</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mf">0.001</span><span class="p">,</span> <span class="mf">0.999</span><span class="p">,</span> <span class="mf">0.01</span><span class="p">,</span> <span class="mf">0.99</span><span class="p">,</span> <span class="mf">0.1</span><span class="p">,</span> <span class="mf">0.9</span><span class="p">])</span>
<span class="n">cpms</span><span class="p">[</span><span class="s">'xs1'</span><span class="p">].</span><span class="n">p</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mf">0.005</span><span class="p">,</span> <span class="mf">0.995</span><span class="p">,</span> <span class="mf">0.05</span><span class="p">,</span> <span class="mf">0.95</span><span class="p">,</span> <span class="mf">0.2</span><span class="p">,</span> <span class="mf">0.8</span><span class="p">])</span>

<span class="c1"># Poles
</span><span class="n">n_pole</span> <span class="o">=</span> <span class="mi">8</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n_pole</span><span class="p">):</span>
    <span class="n">name</span> <span class="o">=</span> <span class="s">'xp'</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
    <span class="nb">vars</span><span class="p">[</span><span class="n">name</span><span class="p">]</span> <span class="o">=</span> <span class="n">variable</span><span class="p">.</span><span class="n">Variable</span><span class="p">(</span> <span class="n">name</span><span class="o">=</span><span class="n">name</span><span class="p">,</span> <span class="n">values</span><span class="o">=</span><span class="p">[</span><span class="s">'fail'</span><span class="p">,</span><span class="s">'surv'</span><span class="p">]</span> <span class="p">)</span> <span class="c1"># values=(failure, survival)
</span>    <span class="n">cpms</span><span class="p">[</span><span class="n">name</span><span class="p">]</span> <span class="o">=</span> <span class="n">cpm</span><span class="p">.</span><span class="n">Cpm</span><span class="p">(</span> <span class="n">variables</span> <span class="o">=</span> <span class="p">[</span><span class="nb">vars</span><span class="p">[</span><span class="n">name</span><span class="p">],</span> <span class="nb">vars</span><span class="p">[</span><span class="s">'haz'</span><span class="p">]],</span> <span class="n">no_child</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span>
                      <span class="n">C</span><span class="o">=</span><span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">],</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">],</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">]])</span> <span class="p">)</span>
    
    <span class="k">if</span> <span class="n">i</span> <span class="ow">in</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">6</span><span class="p">]:</span>
        <span class="n">cpms</span><span class="p">[</span><span class="n">name</span><span class="p">].</span><span class="n">p</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mf">0.001</span><span class="p">,</span> <span class="mf">0.999</span><span class="p">,</span> <span class="mf">0.01</span><span class="p">,</span> <span class="mf">0.99</span><span class="p">,</span> <span class="mf">0.1</span><span class="p">,</span> <span class="mf">0.9</span><span class="p">])</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">cpms</span><span class="p">[</span><span class="n">name</span><span class="p">].</span><span class="n">p</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mf">0.005</span><span class="p">,</span> <span class="mf">0.995</span><span class="p">,</span> <span class="mf">0.05</span><span class="p">,</span> <span class="mf">0.95</span><span class="p">,</span> <span class="mf">0.2</span><span class="p">,</span> <span class="mf">0.8</span><span class="p">])</span>

</code></pre></div></div>

<h2 id="repair-timing">Repair timing</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">max_ct</span> <span class="o">=</span> <span class="n">n_subs</span> <span class="o">+</span> <span class="n">n_pole</span> 

<span class="c1"># Repair priority
</span><span class="n">rep_pri</span> <span class="o">=</span> <span class="p">[</span><span class="s">'xs'</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n_subs</span><span class="p">)]</span> <span class="o">+</span> <span class="p">[</span><span class="s">'xp'</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n_pole</span><span class="p">)]</span> <span class="c1"># repair priority
</span>
<span class="k">print</span><span class="p">(</span><span class="n">rep_pri</span><span class="p">)</span>

</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>['xs0', 'xs1', 'xp0', 'xp1', 'xp2', 'xp3', 'xp4', 'xp5', 'xp6', 'xp7']
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">rep_pri</span><span class="p">):</span>
    <span class="n">name</span> <span class="o">=</span> <span class="s">'t'</span><span class="o">+</span><span class="n">x</span><span class="p">[</span><span class="mi">1</span><span class="p">:]</span>
    <span class="nb">vars</span><span class="p">[</span><span class="n">name</span><span class="p">]</span> <span class="o">=</span> <span class="n">variable</span><span class="p">.</span><span class="n">Variable</span><span class="p">(</span> <span class="n">name</span><span class="o">=</span><span class="n">name</span><span class="p">,</span> <span class="n">values</span><span class="o">=</span><span class="nb">list</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">2</span><span class="p">)),</span> <span class="n">B_flag</span><span class="o">=</span><span class="s">'store'</span> <span class="p">)</span>

    <span class="k">if</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="p">:</span> <span class="c1"># first element
</span>        <span class="n">cpms</span><span class="p">[</span><span class="n">name</span><span class="p">]</span> <span class="o">=</span> <span class="n">cpm</span><span class="p">.</span><span class="n">Cpm</span><span class="p">(</span> <span class="n">variables</span> <span class="o">=</span> <span class="p">[</span><span class="nb">vars</span><span class="p">[</span><span class="n">name</span><span class="p">],</span> <span class="nb">vars</span><span class="p">[</span><span class="n">x</span><span class="p">]],</span> <span class="n">no_child</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="n">C</span><span class="o">=</span><span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">]]),</span> <span class="n">p</span><span class="o">=</span><span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">])</span> <span class="p">)</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">t_old_vars</span> <span class="o">=</span> <span class="nb">vars</span><span class="p">[</span><span class="n">t_old</span><span class="p">].</span><span class="n">values</span>

        <span class="n">Cx</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">empty</span><span class="p">(</span><span class="n">shape</span><span class="o">=</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">),</span> <span class="n">dtype</span><span class="o">=</span><span class="nb">int</span><span class="p">)</span>
        <span class="k">for</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">t_old_vars</span><span class="p">:</span>
            <span class="n">Cx_new</span> <span class="o">=</span> <span class="p">[[</span><span class="n">v</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">v</span><span class="p">],</span> <span class="p">[</span><span class="n">v</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">v</span><span class="p">]]</span>
            <span class="n">Cx</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">vstack</span><span class="p">(</span> <span class="p">[</span><span class="n">Cx</span><span class="p">,</span> <span class="n">Cx_new</span><span class="p">]</span> <span class="p">)</span>

        <span class="n">cpms</span><span class="p">[</span><span class="n">name</span><span class="p">]</span> <span class="o">=</span> <span class="n">cpm</span><span class="p">.</span><span class="n">Cpm</span><span class="p">(</span> <span class="n">variables</span> <span class="o">=</span> <span class="p">[</span><span class="nb">vars</span><span class="p">[</span><span class="n">name</span><span class="p">],</span> <span class="nb">vars</span><span class="p">[</span><span class="n">x</span><span class="p">],</span> <span class="nb">vars</span><span class="p">[</span><span class="n">t_old</span><span class="p">]],</span> <span class="n">no_child</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="n">C</span><span class="o">=</span><span class="n">Cx</span><span class="p">,</span> <span class="n">p</span><span class="o">=</span><span class="n">np</span><span class="p">.</span><span class="n">ones</span><span class="p">(</span><span class="n">shape</span><span class="o">=</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="nb">len</span><span class="p">(</span><span class="n">t_old_vars</span><span class="p">)),</span> <span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="p">.</span><span class="n">float32</span><span class="p">)</span> <span class="p">)</span>

    <span class="n">t_old</span> <span class="o">=</span> <span class="n">copy</span><span class="p">.</span><span class="n">deepcopy</span><span class="p">(</span><span class="n">name</span><span class="p">)</span>


<span class="k">print</span><span class="p">(</span><span class="nb">vars</span><span class="p">[</span><span class="s">'ts0'</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">cpms</span><span class="p">[</span><span class="s">'ts0'</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="s">" "</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="nb">vars</span><span class="p">[</span><span class="s">'tp3'</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">cpms</span><span class="p">[</span><span class="s">'tp3'</span><span class="p">])</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>'Variable(name=ts0, B=[{0}, {1}, {0, 1}], values=[0, 1])'
Cpm(variables=['ts0', 'xs0'], no_child=1, C=[[1 0]
 [0 1]], p=[[1]
 [1]]
 
'Variable(name=tp3, B=[{0}, {1}, {2}, {3}, {4}, {5}, {6}, {0, 1}, {0, 2}, {0, 3}, {0, 4}, {0, 5}, {0, 6}, {1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {2, 3}, {2, 4}, {2, 5}, {2, 6}, {3, 4}, {3, 5}, {3, 6}, {4, 5}, {4, 6}, {5, 6}, {0, 1, 2}, {0, 1, 3}, {0, 1, 4}, {0, 1, 5}, {0, 1, 6}, {0, 2, 3}, {0, 2, 4}, {0, 2, 5}, {0, 2, 6}, {0, 3, 4}, {0, 3, 5}, {0, 3, 6}, {0, 4, 5}, {0, 4, 6}, {0, 5, 6}, {1, 2, 3}, {1, 2, 4}, {1, 2, 5}, {1, 2, 6}, {1, 3, 4}, {1, 3, 5}, {1, 3, 6}, {1, 4, 5}, {1, 4, 6}, {1, 5, 6}, {2, 3, 4}, {2, 3, 5}, {2, 3, 6}, {2, 4, 5}, {2, 4, 6}, {2, 5, 6}, {3, 4, 5}, {3, 4, 6}, {3, 5, 6}, {4, 5, 6}, {0, 1, 2, 3}, {0, 1, 2, 4}, {0, 1, 2, 5}, {0, 1, 2, 6}, {0, 1, 3, 4}, {0, 1, 3, 5}, {0, 1, 3, 6}, {0, 1, 4, 5}, {0, 1, 4, 6}, {0, 1, 5, 6}, {0, 2, 3, 4}, {0, 2, 3, 5}, {0, 2, 3, 6}, {0, 2, 4, 5}, {0, 2, 4, 6}, {0, 2, 5, 6}, {0, 3, 4, 5}, {0, 3, 4, 6}, {0, 3, 5, 6}, {0, 4, 5, 6}, {1, 2, 3, 4}, {1, 2, 3, 5}, {1, 2, 3, 6}, {1, 2, 4, 5}, {1, 2, 4, 6}, {1, 2, 5, 6}, {1, 3, 4, 5}, {1, 3, 4, 6}, {1, 3, 5, 6}, {1, 4, 5, 6}, {2, 3, 4, 5}, {2, 3, 4, 6}, {2, 3, 5, 6}, {2, 4, 5, 6}, {3, 4, 5, 6}, {0, 1, 2, 3, 4}, {0, 1, 2, 3, 5}, {0, 1, 2, 3, 6}, {0, 1, 2, 4, 5}, {0, 1, 2, 4, 6}, {0, 1, 2, 5, 6}, {0, 1, 3, 4, 5}, {0, 1, 3, 4, 6}, {0, 1, 3, 5, 6}, {0, 1, 4, 5, 6}, {0, 2, 3, 4, 5}, {0, 2, 3, 4, 6}, {0, 2, 3, 5, 6}, {0, 2, 4, 5, 6}, {0, 3, 4, 5, 6}, {1, 2, 3, 4, 5}, {1, 2, 3, 4, 6}, {1, 2, 3, 5, 6}, {1, 2, 4, 5, 6}, {1, 3, 4, 5, 6}, {2, 3, 4, 5, 6}, {0, 1, 2, 3, 4, 5}, {0, 1, 2, 3, 4, 6}, {0, 1, 2, 3, 5, 6}, {0, 1, 2, 4, 5, 6}, {0, 1, 3, 4, 5, 6}, {0, 2, 3, 4, 5, 6}, {1, 2, 3, 4, 5, 6}, {0, 1, 2, 3, 4, 5, 6}], values=[0, 1, 2, 3, 4, 5, 6])'
Cpm(variables=['tp3', 'xp3', 'tp2'], no_child=1, C=[[0 1 0]
 [1 0 0]
 [1 1 1]
 [2 0 1]
 [2 1 2]
 [3 0 2]
 [3 1 3]
 [4 0 3]
 [4 1 4]
 [5 0 4]
 [5 1 5]
 [6 0 5]], p=[[1.]
 [1.]
 [1.]
 [1.]
 [1.]
 [1.]
 [1.]
 [1.]
 [1.]
 [1.]
 [1.]
 [1.]]
</code></pre></div></div>

<h2 id="closure-time">Closure time</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">i</span><span class="o">=</span><span class="mi">1</span>
<span class="n">name</span> <span class="o">=</span> <span class="s">'cs'</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
<span class="n">vals</span> <span class="o">=</span> <span class="nb">vars</span><span class="p">[</span><span class="s">'ts'</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="n">i</span><span class="p">)].</span><span class="n">values</span>
<span class="c1">#vars[name] = variable.Variable( name=name, values=vals )
</span>
<span class="k">print</span><span class="p">(</span><span class="n">vals</span><span class="p">)</span>

<span class="n">st</span> <span class="o">=</span> <span class="nb">vars</span><span class="p">[</span><span class="s">'ts'</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="n">i</span><span class="p">)].</span><span class="n">B</span><span class="p">.</span><span class="n">index</span><span class="p">(</span><span class="nb">set</span><span class="p">(</span><span class="n">vals</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">st</span><span class="p">)</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[0, 1, 2]
6
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">rep_pri</span><span class="p">:</span>
    <span class="n">name</span> <span class="o">=</span> <span class="s">'c'</span><span class="o">+</span><span class="n">x</span><span class="p">[</span><span class="mi">1</span><span class="p">:]</span>
    <span class="n">name_t</span> <span class="o">=</span> <span class="s">'t'</span><span class="o">+</span><span class="n">x</span><span class="p">[</span><span class="mi">1</span><span class="p">:]</span>
    <span class="n">vals</span> <span class="o">=</span> <span class="nb">vars</span><span class="p">[</span><span class="n">name_t</span><span class="p">].</span><span class="n">values</span>
    <span class="nb">vars</span><span class="p">[</span><span class="n">name</span><span class="p">]</span> <span class="o">=</span> <span class="n">variable</span><span class="p">.</span><span class="n">Variable</span><span class="p">(</span> <span class="n">name</span><span class="o">=</span><span class="n">name</span><span class="p">,</span> <span class="n">values</span><span class="o">=</span><span class="n">vals</span><span class="p">,</span> <span class="n">B_flag</span><span class="o">=</span><span class="s">'store'</span> <span class="p">)</span>

    <span class="n">ts_all</span> <span class="o">=</span> <span class="nb">vars</span><span class="p">[</span><span class="n">name_t</span><span class="p">].</span><span class="n">B</span><span class="p">.</span><span class="n">index</span><span class="p">(</span><span class="nb">set</span><span class="p">(</span><span class="n">vals</span><span class="p">))</span>
    <span class="n">Cx</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">ts_all</span><span class="p">]])</span>
    <span class="k">for</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">vals</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">v</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>
            <span class="n">Cx</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">vstack</span><span class="p">((</span><span class="n">Cx</span><span class="p">,</span> <span class="p">[</span><span class="n">v</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">v</span><span class="p">]))</span>

    <span class="n">cpms</span><span class="p">[</span><span class="n">name</span><span class="p">]</span> <span class="o">=</span> <span class="n">cpm</span><span class="p">.</span><span class="n">Cpm</span><span class="p">(</span> <span class="n">variables</span> <span class="o">=</span> <span class="p">[</span><span class="nb">vars</span><span class="p">[</span><span class="n">name</span><span class="p">],</span> <span class="nb">vars</span><span class="p">[</span><span class="n">x</span><span class="p">],</span> <span class="nb">vars</span><span class="p">[</span><span class="n">name_t</span><span class="p">]],</span> <span class="n">no_child</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="n">C</span><span class="o">=</span><span class="n">Cx</span><span class="p">,</span> <span class="n">p</span><span class="o">=</span><span class="n">np</span><span class="p">.</span><span class="n">ones</span><span class="p">(</span><span class="n">shape</span><span class="o">=</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">Cx</span><span class="p">),</span><span class="mi">1</span><span class="p">),</span> <span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="p">.</span><span class="n">float32</span><span class="p">)</span> <span class="p">)</span>


<span class="k">print</span><span class="p">(</span><span class="nb">vars</span><span class="p">[</span><span class="s">'cs0'</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">cpms</span><span class="p">[</span><span class="s">'cs0'</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="s">" "</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="nb">vars</span><span class="p">[</span><span class="s">'cp3'</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">cpms</span><span class="p">[</span><span class="s">'cp3'</span><span class="p">])</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>'Variable(name=cs0, B=[{0}, {1}, {0, 1}], values=[0, 1])'
Cpm(variables=['cs0', 'xs0', 'ts0'], no_child=1, C=[[0 1 2]
 [1 0 1]], p=[[1.]
 [1.]]
 
'Variable(name=cp3, B=[{0}, {1}, {2}, {3}, {4}, {5}, {6}, {0, 1}, {0, 2}, {0, 3}, {0, 4}, {0, 5}, {0, 6}, {1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {2, 3}, {2, 4}, {2, 5}, {2, 6}, {3, 4}, {3, 5}, {3, 6}, {4, 5}, {4, 6}, {5, 6}, {0, 1, 2}, {0, 1, 3}, {0, 1, 4}, {0, 1, 5}, {0, 1, 6}, {0, 2, 3}, {0, 2, 4}, {0, 2, 5}, {0, 2, 6}, {0, 3, 4}, {0, 3, 5}, {0, 3, 6}, {0, 4, 5}, {0, 4, 6}, {0, 5, 6}, {1, 2, 3}, {1, 2, 4}, {1, 2, 5}, {1, 2, 6}, {1, 3, 4}, {1, 3, 5}, {1, 3, 6}, {1, 4, 5}, {1, 4, 6}, {1, 5, 6}, {2, 3, 4}, {2, 3, 5}, {2, 3, 6}, {2, 4, 5}, {2, 4, 6}, {2, 5, 6}, {3, 4, 5}, {3, 4, 6}, {3, 5, 6}, {4, 5, 6}, {0, 1, 2, 3}, {0, 1, 2, 4}, {0, 1, 2, 5}, {0, 1, 2, 6}, {0, 1, 3, 4}, {0, 1, 3, 5}, {0, 1, 3, 6}, {0, 1, 4, 5}, {0, 1, 4, 6}, {0, 1, 5, 6}, {0, 2, 3, 4}, {0, 2, 3, 5}, {0, 2, 3, 6}, {0, 2, 4, 5}, {0, 2, 4, 6}, {0, 2, 5, 6}, {0, 3, 4, 5}, {0, 3, 4, 6}, {0, 3, 5, 6}, {0, 4, 5, 6}, {1, 2, 3, 4}, {1, 2, 3, 5}, {1, 2, 3, 6}, {1, 2, 4, 5}, {1, 2, 4, 6}, {1, 2, 5, 6}, {1, 3, 4, 5}, {1, 3, 4, 6}, {1, 3, 5, 6}, {1, 4, 5, 6}, {2, 3, 4, 5}, {2, 3, 4, 6}, {2, 3, 5, 6}, {2, 4, 5, 6}, {3, 4, 5, 6}, {0, 1, 2, 3, 4}, {0, 1, 2, 3, 5}, {0, 1, 2, 3, 6}, {0, 1, 2, 4, 5}, {0, 1, 2, 4, 6}, {0, 1, 2, 5, 6}, {0, 1, 3, 4, 5}, {0, 1, 3, 4, 6}, {0, 1, 3, 5, 6}, {0, 1, 4, 5, 6}, {0, 2, 3, 4, 5}, {0, 2, 3, 4, 6}, {0, 2, 3, 5, 6}, {0, 2, 4, 5, 6}, {0, 3, 4, 5, 6}, {1, 2, 3, 4, 5}, {1, 2, 3, 4, 6}, {1, 2, 3, 5, 6}, {1, 2, 4, 5, 6}, {1, 3, 4, 5, 6}, {2, 3, 4, 5, 6}, {0, 1, 2, 3, 4, 5}, {0, 1, 2, 3, 4, 6}, {0, 1, 2, 3, 5, 6}, {0, 1, 2, 4, 5, 6}, {0, 1, 3, 4, 5, 6}, {0, 2, 3, 4, 5, 6}, {1, 2, 3, 4, 5, 6}, {0, 1, 2, 3, 4, 5, 6}], values=[0, 1, 2, 3, 4, 5, 6])'
Cpm(variables=['cp3', 'xp3', 'tp3'], no_child=1, C=[[  0   1 126]
 [  1   0   1]
 [  2   0   2]
 [  3   0   3]
 [  4   0   4]
 [  5   0   5]
 [  6   0   6]], p=[[1.]
 [1.]
 [1.]
 [1.]
 [1.]
 [1.]
 [1.]]
</code></pre></div></div>

<h2 id="power-cut-time">Power cut time</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Example 1
</span><span class="n">vars_p_h0</span> <span class="o">=</span> <span class="p">[</span><span class="nb">vars</span><span class="p">[</span><span class="s">'cp0'</span><span class="p">],</span> <span class="nb">vars</span><span class="p">[</span><span class="s">'cs0'</span><span class="p">]]</span>
<span class="n">M_h0</span><span class="p">,</span> <span class="n">v_h0</span> <span class="o">=</span> <span class="n">operation</span><span class="p">.</span><span class="n">sys_max_val</span><span class="p">(</span><span class="s">'h0'</span><span class="p">,</span> <span class="n">vars_p_h0</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">M_h0</span><span class="p">,</span> <span class="n">v_h0</span><span class="p">)</span>

<span class="c1"># Example 2
</span><span class="n">vars_p_h1</span> <span class="o">=</span> <span class="p">[</span><span class="nb">vars</span><span class="p">[</span><span class="s">'cp1'</span><span class="p">],</span> <span class="nb">vars</span><span class="p">[</span><span class="s">'cp0'</span><span class="p">],</span> <span class="nb">vars</span><span class="p">[</span><span class="s">'cs0'</span><span class="p">]]</span>
<span class="n">M_h1</span><span class="p">,</span> <span class="n">v_h1</span> <span class="o">=</span> <span class="n">operation</span><span class="p">.</span><span class="n">sys_max_val</span><span class="p">(</span><span class="s">'h1'</span><span class="p">,</span> <span class="n">vars_p_h1</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="s">""</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">M_h1</span><span class="p">,</span> <span class="n">v_h1</span><span class="p">)</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Cpm(variables=['h0', 'cp0', 'cs0'], no_child=1, C=[[0 0 0]
 [1 1 2]
 [2 2 2]
 [3 3 2]
 [1 0 1]], p=[[1.]
 [1.]
 [1.]
 [1.]
 [1.]] 'Variable(name=h0, B=[{0}, {1}, {2}, {3}, {0, 1}, {0, 2}, {0, 3}, {1, 2}, {1, 3}, {2, 3}, {0, 1, 2}, {0, 1, 3}, {0, 2, 3}, {1, 2, 3}, {0, 1, 2, 3}], values=[0, 1, 2, 3])'

Cpm(variables=['h1', 'cp1', 'cp0', 'cs0'], no_child=1, C=[[ 0  0  0  0]
 [ 1  1  4  2]
 [ 2  2 10  2]
 [ 3  3 14  2]
 [ 4  4 14  2]
 [ 1  0  1  2]
 [ 2  5  2  2]
 [ 3 15  3  2]
 [ 1  0  0  1]], p=[[1.]
 [1.]
 [1.]
 [1.]
 [1.]
 [1.]
 [1.]
 [1.]
 [1.]] 'Variable(name=h1, B=[{0}, {1}, {2}, {3}, {4}, {0, 1}, {0, 2}, {0, 3}, {0, 4}, {1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}, {0, 1, 2}, {0, 1, 3}, {0, 1, 4}, {0, 2, 3}, {0, 2, 4}, {0, 3, 4}, {1, 2, 3}, {1, 2, 4}, {1, 3, 4}, {2, 3, 4}, {0, 1, 2, 3}, {0, 1, 2, 4}, {0, 1, 3, 4}, {0, 2, 3, 4}, {1, 2, 3, 4}, {0, 1, 2, 3, 4}], values=[0, 1, 2, 3, 4])'
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">cut_lin</span> <span class="o">=</span> <span class="p">{}</span> <span class="c1"># cut-set of link-sets for each house
</span>
<span class="n">cut_lin</span><span class="p">[</span><span class="s">'h0'</span><span class="p">]</span> <span class="o">=</span> <span class="p">[[</span><span class="s">'cs0'</span><span class="p">,</span> <span class="s">'cp0'</span><span class="p">]]</span>
<span class="n">cut_lin</span><span class="p">[</span><span class="s">'h1'</span><span class="p">]</span> <span class="o">=</span> <span class="p">[[</span><span class="s">'cs0'</span><span class="p">,</span> <span class="s">'cp0'</span><span class="p">,</span> <span class="s">'cp1'</span><span class="p">]]</span>
<span class="n">cut_lin</span><span class="p">[</span><span class="s">'h2'</span><span class="p">]</span> <span class="o">=</span> <span class="p">[[</span><span class="s">'cs0'</span><span class="p">,</span> <span class="s">'cp2'</span><span class="p">]]</span>
<span class="n">cut_lin</span><span class="p">[</span><span class="s">'h3'</span><span class="p">]</span> <span class="o">=</span> <span class="p">[[</span><span class="s">'cs0'</span><span class="p">,</span> <span class="s">'cp2'</span><span class="p">,</span> <span class="s">'cp3'</span><span class="p">],</span> <span class="p">[</span><span class="s">'cs1'</span><span class="p">,</span><span class="s">'cp4'</span><span class="p">]]</span>
<span class="n">cut_lin</span><span class="p">[</span><span class="s">'h4'</span><span class="p">]</span> <span class="o">=</span> <span class="p">[[</span><span class="s">'cs0'</span><span class="p">,</span> <span class="s">'cp2'</span><span class="p">,</span> <span class="s">'cp3'</span><span class="p">,</span> <span class="s">'cp5'</span><span class="p">],</span> <span class="p">[</span><span class="s">'cs1'</span><span class="p">,</span> <span class="s">'cp4'</span><span class="p">,</span><span class="s">'cp5'</span><span class="p">]]</span>
<span class="n">cut_lin</span><span class="p">[</span><span class="s">'h5'</span><span class="p">]</span> <span class="o">=</span> <span class="p">[[</span><span class="s">'cs1'</span><span class="p">,</span> <span class="s">'cp6'</span><span class="p">]]</span>
<span class="n">cut_lin</span><span class="p">[</span><span class="s">'h6'</span><span class="p">]</span> <span class="o">=</span> <span class="p">[[</span><span class="s">'cs1'</span><span class="p">,</span> <span class="s">'cp6'</span><span class="p">,</span> <span class="s">'cp7'</span><span class="p">]]</span>

<span class="k">for</span> <span class="n">h</span><span class="p">,</span> <span class="n">sets</span> <span class="ow">in</span> <span class="n">cut_lin</span><span class="p">.</span><span class="n">items</span><span class="p">():</span>
    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">sets</span><span class="p">)</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>              
        <span class="n">vars_h</span> <span class="o">=</span> <span class="p">[</span><span class="nb">vars</span><span class="p">[</span><span class="n">x</span><span class="p">]</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">sets</span><span class="p">[</span><span class="mi">0</span><span class="p">]]</span>

        <span class="n">cpms</span><span class="p">[</span><span class="n">h</span><span class="p">],</span> <span class="nb">vars</span><span class="p">[</span><span class="n">h</span><span class="p">]</span> <span class="o">=</span> <span class="n">operation</span><span class="p">.</span><span class="n">sys_max_val</span><span class="p">(</span> <span class="n">h</span><span class="p">,</span> <span class="n">vars_h</span> <span class="p">)</span>
        
    <span class="k">else</span><span class="p">:</span>
        <span class="n">names_hs</span> <span class="o">=</span> <span class="p">[</span><span class="n">h</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">sets</span><span class="p">))]</span>
        <span class="k">for</span> <span class="n">h_i</span><span class="p">,</span> <span class="n">s_i</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">names_hs</span><span class="p">,</span> <span class="n">sets</span><span class="p">):</span>
            <span class="n">vars_h_i</span> <span class="o">=</span> <span class="p">[</span><span class="nb">vars</span><span class="p">[</span><span class="n">x</span><span class="p">]</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">s_i</span><span class="p">]</span>

            <span class="n">cpms</span><span class="p">[</span><span class="n">h_i</span><span class="p">],</span> <span class="nb">vars</span><span class="p">[</span><span class="n">h_i</span><span class="p">]</span> <span class="o">=</span> <span class="n">operation</span><span class="p">.</span><span class="n">sys_max_val</span><span class="p">(</span> <span class="n">h_i</span><span class="p">,</span> <span class="n">vars_h_i</span> <span class="p">)</span>
            
        <span class="n">vars_hs</span> <span class="o">=</span> <span class="p">[</span><span class="nb">vars</span><span class="p">[</span><span class="n">n</span><span class="p">]</span> <span class="k">for</span> <span class="n">n</span> <span class="ow">in</span> <span class="n">names_hs</span><span class="p">]</span>
        <span class="n">cpms</span><span class="p">[</span><span class="n">h</span><span class="p">],</span> <span class="nb">vars</span><span class="p">[</span><span class="n">h</span><span class="p">]</span> <span class="o">=</span> <span class="n">operation</span><span class="p">.</span><span class="n">sys_min_val</span><span class="p">(</span> <span class="n">h</span><span class="p">,</span> <span class="n">vars_hs</span> <span class="p">)</span>
       
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="nb">vars</span><span class="p">[</span><span class="s">'h1'</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">cpms</span><span class="p">[</span><span class="s">'h1'</span><span class="p">])</span>

<span class="k">print</span><span class="p">(</span><span class="s">""</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="nb">vars</span><span class="p">[</span><span class="s">'h3'</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">cpms</span><span class="p">[</span><span class="s">'h3'</span><span class="p">])</span>

<span class="k">print</span><span class="p">(</span><span class="s">""</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="nb">vars</span><span class="p">[</span><span class="s">'h30'</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">cpms</span><span class="p">[</span><span class="s">'h30'</span><span class="p">])</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>'Variable(name=h1, B=[{0}, {1}, {2}, {3}, {4}, {0, 1}, {0, 2}, {0, 3}, {0, 4}, {1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}, {0, 1, 2}, {0, 1, 3}, {0, 1, 4}, {0, 2, 3}, {0, 2, 4}, {0, 3, 4}, {1, 2, 3}, {1, 2, 4}, {1, 3, 4}, {2, 3, 4}, {0, 1, 2, 3}, {0, 1, 2, 4}, {0, 1, 3, 4}, {0, 2, 3, 4}, {1, 2, 3, 4}, {0, 1, 2, 3, 4}], values=[0, 1, 2, 3, 4])'
Cpm(variables=['h1', 'cs0', 'cp0', 'cp1'], no_child=1, C=[[ 0  0  0  0]
 [ 1  1  4  5]
 [ 1  0  1  5]
 [ 2  2  2 15]
 [ 3  2  3 25]
 [ 1  0  0  1]
 [ 2  2  4  2]
 [ 3  2 10  3]
 [ 4  2 14  4]], p=[[1.]
 [1.]
 [1.]
 [1.]
 [1.]
 [1.]
 [1.]
 [1.]
 [1.]]

'Variable(name=h3, B=[{0}, {1}, {2}, {3}, {4}, {5}, {6}, {0, 1}, {0, 2}, {0, 3}, {0, 4}, {0, 5}, {0, 6}, {1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {2, 3}, {2, 4}, {2, 5}, {2, 6}, {3, 4}, {3, 5}, {3, 6}, {4, 5}, {4, 6}, {5, 6}, {0, 1, 2}, {0, 1, 3}, {0, 1, 4}, {0, 1, 5}, {0, 1, 6}, {0, 2, 3}, {0, 2, 4}, {0, 2, 5}, {0, 2, 6}, {0, 3, 4}, {0, 3, 5}, {0, 3, 6}, {0, 4, 5}, {0, 4, 6}, {0, 5, 6}, {1, 2, 3}, {1, 2, 4}, {1, 2, 5}, {1, 2, 6}, {1, 3, 4}, {1, 3, 5}, {1, 3, 6}, {1, 4, 5}, {1, 4, 6}, {1, 5, 6}, {2, 3, 4}, {2, 3, 5}, {2, 3, 6}, {2, 4, 5}, {2, 4, 6}, {2, 5, 6}, {3, 4, 5}, {3, 4, 6}, {3, 5, 6}, {4, 5, 6}, {0, 1, 2, 3}, {0, 1, 2, 4}, {0, 1, 2, 5}, {0, 1, 2, 6}, {0, 1, 3, 4}, {0, 1, 3, 5}, {0, 1, 3, 6}, {0, 1, 4, 5}, {0, 1, 4, 6}, {0, 1, 5, 6}, {0, 2, 3, 4}, {0, 2, 3, 5}, {0, 2, 3, 6}, {0, 2, 4, 5}, {0, 2, 4, 6}, {0, 2, 5, 6}, {0, 3, 4, 5}, {0, 3, 4, 6}, {0, 3, 5, 6}, {0, 4, 5, 6}, {1, 2, 3, 4}, {1, 2, 3, 5}, {1, 2, 3, 6}, {1, 2, 4, 5}, {1, 2, 4, 6}, {1, 2, 5, 6}, {1, 3, 4, 5}, {1, 3, 4, 6}, {1, 3, 5, 6}, {1, 4, 5, 6}, {2, 3, 4, 5}, {2, 3, 4, 6}, {2, 3, 5, 6}, {2, 4, 5, 6}, {3, 4, 5, 6}, {0, 1, 2, 3, 4}, {0, 1, 2, 3, 5}, {0, 1, 2, 3, 6}, {0, 1, 2, 4, 5}, {0, 1, 2, 4, 6}, {0, 1, 2, 5, 6}, {0, 1, 3, 4, 5}, {0, 1, 3, 4, 6}, {0, 1, 3, 5, 6}, {0, 1, 4, 5, 6}, {0, 2, 3, 4, 5}, {0, 2, 3, 4, 6}, {0, 2, 3, 5, 6}, {0, 2, 4, 5, 6}, {0, 3, 4, 5, 6}, {1, 2, 3, 4, 5}, {1, 2, 3, 4, 6}, {1, 2, 3, 5, 6}, {1, 2, 4, 5, 6}, {1, 3, 4, 5, 6}, {2, 3, 4, 5, 6}, {0, 1, 2, 3, 4, 5}, {0, 1, 2, 3, 4, 6}, {0, 1, 2, 3, 5, 6}, {0, 1, 2, 4, 5, 6}, {0, 1, 3, 4, 5, 6}, {0, 2, 3, 4, 5, 6}, {1, 2, 3, 4, 5, 6}, {0, 1, 2, 3, 4, 5, 6}], values=[0, 1, 2, 3, 4, 5, 6])'
Cpm(variables=['h3', 'h30', 'h31'], no_child=1, C=[[  0   0 254]
 [  1   1 253]
 [  2   2 245]
 [  3   3 217]
 [  4   4 161]
 [  5   5  91]
 [  6   6  35]
 [  0 125   0]
 [  1 118   1]
 [  2  97   2]
 [  3  62   3]
 [  4  27   4]
 [  5   6   5]], p=[[1.]
 [1.]
 [1.]
 [1.]
 [1.]
 [1.]
 [1.]
 [1.]
 [1.]
 [1.]
 [1.]
 [1.]
 [1.]]

'Variable(name=h30, B=[{0}, {1}, {2}, {3}, {4}, {5}, {6}, {0, 1}, {0, 2}, {0, 3}, {0, 4}, {0, 5}, {0, 6}, {1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {2, 3}, {2, 4}, {2, 5}, {2, 6}, {3, 4}, {3, 5}, {3, 6}, {4, 5}, {4, 6}, {5, 6}, {0, 1, 2}, {0, 1, 3}, {0, 1, 4}, {0, 1, 5}, {0, 1, 6}, {0, 2, 3}, {0, 2, 4}, {0, 2, 5}, {0, 2, 6}, {0, 3, 4}, {0, 3, 5}, {0, 3, 6}, {0, 4, 5}, {0, 4, 6}, {0, 5, 6}, {1, 2, 3}, {1, 2, 4}, {1, 2, 5}, {1, 2, 6}, {1, 3, 4}, {1, 3, 5}, {1, 3, 6}, {1, 4, 5}, {1, 4, 6}, {1, 5, 6}, {2, 3, 4}, {2, 3, 5}, {2, 3, 6}, {2, 4, 5}, {2, 4, 6}, {2, 5, 6}, {3, 4, 5}, {3, 4, 6}, {3, 5, 6}, {4, 5, 6}, {0, 1, 2, 3}, {0, 1, 2, 4}, {0, 1, 2, 5}, {0, 1, 2, 6}, {0, 1, 3, 4}, {0, 1, 3, 5}, {0, 1, 3, 6}, {0, 1, 4, 5}, {0, 1, 4, 6}, {0, 1, 5, 6}, {0, 2, 3, 4}, {0, 2, 3, 5}, {0, 2, 3, 6}, {0, 2, 4, 5}, {0, 2, 4, 6}, {0, 2, 5, 6}, {0, 3, 4, 5}, {0, 3, 4, 6}, {0, 3, 5, 6}, {0, 4, 5, 6}, {1, 2, 3, 4}, {1, 2, 3, 5}, {1, 2, 3, 6}, {1, 2, 4, 5}, {1, 2, 4, 6}, {1, 2, 5, 6}, {1, 3, 4, 5}, {1, 3, 4, 6}, {1, 3, 5, 6}, {1, 4, 5, 6}, {2, 3, 4, 5}, {2, 3, 4, 6}, {2, 3, 5, 6}, {2, 4, 5, 6}, {3, 4, 5, 6}, {0, 1, 2, 3, 4}, {0, 1, 2, 3, 5}, {0, 1, 2, 3, 6}, {0, 1, 2, 4, 5}, {0, 1, 2, 4, 6}, {0, 1, 2, 5, 6}, {0, 1, 3, 4, 5}, {0, 1, 3, 4, 6}, {0, 1, 3, 5, 6}, {0, 1, 4, 5, 6}, {0, 2, 3, 4, 5}, {0, 2, 3, 4, 6}, {0, 2, 3, 5, 6}, {0, 2, 4, 5, 6}, {0, 3, 4, 5, 6}, {1, 2, 3, 4, 5}, {1, 2, 3, 4, 6}, {1, 2, 3, 5, 6}, {1, 2, 4, 5, 6}, {1, 3, 4, 5, 6}, {2, 3, 4, 5, 6}, {0, 1, 2, 3, 4, 5}, {0, 1, 2, 3, 4, 6}, {0, 1, 2, 3, 5, 6}, {0, 1, 2, 4, 5, 6}, {0, 1, 3, 4, 5, 6}, {0, 2, 3, 4, 5, 6}, {1, 2, 3, 4, 5, 6}, {0, 1, 2, 3, 4, 5, 6}], values=[0, 1, 2, 3, 4, 5, 6])'
Cpm(variables=['h30', 'cs0', 'cp2', 'cp3'], no_child=1, C=[[  0   0   0   0]
 [  1   1   6   7]
 [  1   0   1   7]
 [  2   2   2  28]
 [  3   2   3  63]
 [  4   2   4  98]
 [  5   2   5 119]
 [  1   0   0   1]
 [  2   2   6   2]
 [  3   2  21   3]
 [  4   2  41   4]
 [  5   2  56   5]
 [  6   2  62   6]], p=[[1.]
 [1.]
 [1.]
 [1.]
 [1.]
 [1.]
 [1.]
 [1.]
 [1.]
 [1.]
 [1.]
 [1.]
 [1.]]
</code></pre></div></div>

<h1 id="inference">Inference</h1>

<p>We apply conditioning on $H$ and variable elimination (VE) on other variables. For VE, we need to decide elimination order as $S_0$ â†’ $T_0^S$ â†’ $C^S_0$ â†’ $S_1$ â†’ $T_1^S$ â†’ $C^S_1$ â†’ $P_0$ â†’ â€¦ â†’ $C_7^P$ â†’ $H_0$ â†’ $H_1$ â†’ â€¦ â†’ $H_6$.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">n_hou</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">cut_lin</span><span class="p">)</span>

<span class="n">VE_ord</span><span class="o">=</span> <span class="p">[</span><span class="s">'haz'</span><span class="p">]</span>
<span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">rep_pri</span><span class="p">:</span>
    <span class="n">VE_ord</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
    <span class="n">VE_ord</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="s">'t'</span><span class="o">+</span><span class="n">x</span><span class="p">[</span><span class="mi">1</span><span class="p">:])</span>
    <span class="n">VE_ord</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="s">'c'</span><span class="o">+</span><span class="n">x</span><span class="p">[</span><span class="mi">1</span><span class="p">:])</span>
<span class="n">VE_ord</span> <span class="o">+=</span> <span class="p">[</span><span class="s">'h0'</span><span class="p">,</span> <span class="s">'h1'</span><span class="p">,</span> <span class="s">'h2'</span><span class="p">]</span><span class="o">+</span><span class="p">[</span><span class="s">'h30'</span><span class="p">,</span> <span class="s">'h31'</span><span class="p">,</span> <span class="s">'h3'</span><span class="p">]</span><span class="o">+</span><span class="p">[</span><span class="s">'h40'</span><span class="p">,</span> <span class="s">'h41'</span><span class="p">,</span> <span class="s">'h4'</span><span class="p">]</span> <span class="o">+</span> <span class="p">[</span><span class="s">'h5'</span><span class="p">,</span> <span class="s">'h6'</span><span class="p">]</span>
</code></pre></div></div>

<p>Then, if we want to obtain the marginal distribution of $H_n$, $P(H_n)$ by summing out all other variables, we only need to consider those variables that are (grand, great grand, etc.) parents of $H_n$.</p>

<p>For example, in case of $H_0$, we have those relevant variables as marked blue in the figure below:</p>
<figure>
<img src="/BNS-JT/assets/img/power_house_bn_h0.png" style="width:400px" />
</figure>

<p>The set of those relevant variables can be obtained using the function <span style="font-family:Consolas;">cpm.get_inf_vars</span>, as shown in the code below:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Example 1
</span><span class="n">h_star1</span> <span class="o">=</span> <span class="p">[</span><span class="s">'h0'</span><span class="p">]</span>
<span class="n">vars_inf1</span> <span class="o">=</span> <span class="n">operation</span><span class="p">.</span><span class="n">get_inf_vars</span><span class="p">(</span> <span class="n">cpms</span><span class="p">,</span> <span class="n">h_star1</span><span class="p">,</span> <span class="n">VE_ord</span> <span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">vars_inf1</span><span class="p">)</span>

<span class="c1"># Example 2
</span><span class="n">h_star2</span> <span class="o">=</span> <span class="p">[</span><span class="s">'h0'</span><span class="p">,</span><span class="s">'h1'</span><span class="p">]</span>
<span class="n">vars_inf2</span> <span class="o">=</span> <span class="n">operation</span><span class="p">.</span><span class="n">get_inf_vars</span><span class="p">(</span> <span class="n">cpms</span><span class="p">,</span> <span class="n">h_star2</span><span class="p">,</span> <span class="n">VE_ord</span> <span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">vars_inf2</span><span class="p">)</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>['haz', 'xs0', 'ts0', 'cs0', 'xs1', 'ts1', 'xp0', 'tp0', 'cp0', 'h0']
['haz', 'xs0', 'ts0', 'cs0', 'xs1', 'ts1', 'xp0', 'tp0', 'cp0', 'xp1', 'tp1', 'cp1', 'h0', 'h1']
</code></pre></div></div>

<p>Now we perform inference.</p>

<p>Below, we calcualte $P(H_0)$ by first obtaining an inference scope (i.e. variables to consider) using <span style="font-family:Consolas;">cpm.get_inf_vars</span> and executing the conditioning-VE algorithm by <span style="font-family:Consolas;">cpm.cal_Msys_by_cond_VE</span>.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">cond_names</span> <span class="o">=</span> <span class="p">[</span><span class="s">'haz'</span><span class="p">]</span>

<span class="c1"># H0
</span><span class="n">vars_inf_h0</span> <span class="o">=</span> <span class="n">operation</span><span class="p">.</span><span class="n">get_inf_vars</span><span class="p">(</span> <span class="n">cpms</span><span class="p">,</span> <span class="p">[</span><span class="s">'h0'</span><span class="p">],</span> <span class="n">VE_ord</span> <span class="p">)</span>
<span class="n">ve_names</span> <span class="o">=</span> <span class="p">[</span><span class="n">x</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">vars_inf_h0</span> <span class="k">if</span> <span class="n">x</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">cond_names</span><span class="p">]</span>

<span class="n">Msys_h0</span> <span class="o">=</span> <span class="n">operation</span><span class="p">.</span><span class="n">variable_elim_cond</span><span class="p">([</span><span class="n">cpms</span><span class="p">[</span><span class="n">k</span><span class="p">]</span> <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="n">ve_names</span><span class="p">],</span> <span class="p">[</span><span class="nb">vars</span><span class="p">[</span><span class="n">v</span><span class="p">]</span> <span class="k">for</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">ve_names</span> <span class="k">if</span> <span class="n">v</span> <span class="o">!=</span> <span class="s">'h0'</span><span class="p">],</span>
                             <span class="p">[</span><span class="n">cpms</span><span class="p">[</span><span class="n">k</span><span class="p">]</span> <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="n">cond_names</span><span class="p">])</span> 

<span class="k">print</span><span class="p">(</span><span class="n">Msys_h0</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="nb">sum</span><span class="p">(</span><span class="n">Msys_h0</span><span class="p">.</span><span class="n">p</span><span class="p">))</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Cpm(variables=['h0'], no_child=1, C=[[0]
 [1]
 [2]
 [3]], p=[[9.38020500e-01]
 [5.34575025e-02]
 [7.92099500e-03]
 [6.01002500e-04]]
[1.]
</code></pre></div></div>

<p>We now calculate $P(H_6)$, which takes much longer than $H_0$ (in my desktop, it takes 30 seconds). This is because we now have more variables to consider because $T_7^P$ is in the last priority of repair, and thus all $T_x$ becomes relevant. The variables in the inference scope are marked below in the figure below:</p>
<figure>
<img src="/BNS-JT/assets/img/power_house_bn_h6.png" style="width:400px" />
</figure>

<p>One might consider applying sampling instead of the applied exact inference for faster calculation or a larger number of components (i.e. substations and poles).</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># H6
</span><span class="n">vars_inf_h6</span> <span class="o">=</span> <span class="n">operation</span><span class="p">.</span><span class="n">get_inf_vars</span><span class="p">(</span> <span class="n">cpms</span><span class="p">,</span> <span class="p">[</span><span class="s">'h6'</span><span class="p">],</span> <span class="n">VE_ord</span> <span class="p">)</span>
<span class="n">ve_names</span> <span class="o">=</span> <span class="p">[</span><span class="n">x</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">vars_inf_h6</span> <span class="k">if</span> <span class="n">x</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">cond_names</span><span class="p">]</span>

<span class="n">Msys_h6</span> <span class="o">=</span> <span class="n">operation</span><span class="p">.</span><span class="n">variable_elim_cond</span><span class="p">([</span><span class="n">cpms</span><span class="p">[</span><span class="n">k</span><span class="p">]</span> <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="n">ve_names</span><span class="p">],</span> <span class="p">[</span><span class="nb">vars</span><span class="p">[</span><span class="n">v</span><span class="p">]</span> <span class="k">for</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">ve_names</span> <span class="k">if</span> <span class="n">v</span> <span class="o">!=</span> <span class="s">'h6'</span><span class="p">],</span>
                             <span class="p">[</span><span class="n">cpms</span><span class="p">[</span><span class="n">k</span><span class="p">]</span> <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="n">cond_names</span><span class="p">])</span> 
<span class="k">print</span><span class="p">(</span><span class="n">Msys_h6</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="nb">sum</span><span class="p">(</span><span class="n">Msys_h6</span><span class="p">.</span><span class="n">p</span><span class="p">))</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Cpm(variables=['h6'], no_child=1, C=[[ 0]
 [ 1]
 [ 2]
 [ 3]
 [ 4]
 [ 5]
 [ 6]
 [ 7]
 [ 8]
 [ 9]
 [10]], p=[[8.46012488e-01]
 [8.37913635e-02]
 [3.87747064e-02]
 [2.13166722e-02]
 [7.92699644e-03]
 [1.86292686e-03]
 [2.84743240e-04]
 [2.82798049e-05]
 [1.76064092e-06]
 [6.24000037e-08]
 [9.60000006e-10]]
[1.]
</code></pre></div></div>

<h1 id="final-result">Final result</h1>

<p>We now calculate for all houses.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">cond_names</span> <span class="o">=</span> <span class="p">[</span><span class="s">'haz'</span><span class="p">]</span>
<span class="n">VE_ord</span><span class="o">=</span> <span class="p">[</span><span class="s">'haz'</span><span class="p">]</span>
<span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">rep_pri</span><span class="p">:</span>
    <span class="n">VE_ord</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
    <span class="n">VE_ord</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="s">'t'</span><span class="o">+</span><span class="n">x</span><span class="p">[</span><span class="mi">1</span><span class="p">:])</span>
    <span class="n">VE_ord</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="s">'c'</span><span class="o">+</span><span class="n">x</span><span class="p">[</span><span class="mi">1</span><span class="p">:])</span>
<span class="n">VE_ord</span> <span class="o">+=</span> <span class="p">[</span><span class="s">'h0'</span><span class="p">,</span> <span class="s">'h1'</span><span class="p">,</span> <span class="s">'h2'</span><span class="p">]</span><span class="o">+</span><span class="p">[</span><span class="s">'h30'</span><span class="p">,</span> <span class="s">'h31'</span><span class="p">,</span> <span class="s">'h3'</span><span class="p">]</span><span class="o">+</span><span class="p">[</span><span class="s">'h40'</span><span class="p">,</span> <span class="s">'h41'</span><span class="p">,</span> <span class="s">'h4'</span><span class="p">]</span> <span class="o">+</span> <span class="p">[</span><span class="s">'h5'</span><span class="p">,</span> <span class="s">'h6'</span><span class="p">]</span>

<span class="n">Mhs</span> <span class="o">=</span> <span class="p">{}</span>
<span class="k">for</span> <span class="n">h</span> <span class="ow">in</span> <span class="n">cut_lin</span><span class="p">.</span><span class="n">keys</span><span class="p">():</span>
    <span class="n">st</span> <span class="o">=</span> <span class="n">time</span><span class="p">.</span><span class="n">time</span><span class="p">()</span>

    <span class="n">vars_inf</span> <span class="o">=</span> <span class="n">operation</span><span class="p">.</span><span class="n">get_inf_vars</span><span class="p">(</span> <span class="n">cpms</span><span class="p">,</span> <span class="p">[</span><span class="n">h</span><span class="p">],</span> <span class="n">VE_ord</span> <span class="p">)</span>
    <span class="n">ve_names</span> <span class="o">=</span> <span class="p">[</span><span class="n">x</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">vars_inf</span> <span class="k">if</span> <span class="n">x</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">cond_names</span><span class="p">]</span>

    <span class="n">Mhs</span><span class="p">[</span><span class="n">h</span><span class="p">]</span> <span class="o">=</span> <span class="n">operation</span><span class="p">.</span><span class="n">variable_elim_cond</span><span class="p">([</span><span class="n">cpms</span><span class="p">[</span><span class="n">k</span><span class="p">]</span> <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="n">ve_names</span><span class="p">],</span>
                                          <span class="p">[</span><span class="nb">vars</span><span class="p">[</span><span class="n">v</span><span class="p">]</span> <span class="k">for</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">ve_names</span> <span class="k">if</span> <span class="n">v</span> <span class="o">!=</span> <span class="n">h</span><span class="p">],</span>
                                          <span class="p">[</span><span class="n">cpms</span><span class="p">[</span><span class="n">k</span><span class="p">]</span> <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="n">cond_names</span><span class="p">])</span> 
    <span class="n">en</span> <span class="o">=</span> <span class="n">time</span><span class="p">.</span><span class="n">time</span><span class="p">()</span>

    <span class="k">print</span><span class="p">(</span> <span class="n">h</span> <span class="o">+</span> <span class="s">" Done. "</span> <span class="o">+</span> <span class="s">"Took {:.2f} sec."</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">en</span><span class="o">-</span><span class="n">st</span><span class="p">)</span> <span class="p">)</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>h0 Done. Took 0.10 sec.
h1 Done. Took 0.31 sec.
h2 Done. Took 0.35 sec.
h3 Done. Took 36.69 sec.
h4 Done. Took 176.22 sec.
h5 Done. Took 8.59 sec.
h6 Done. Took 39.84 sec.
</code></pre></div></div>

<p>Using function <span style="font-family:Consolas;">cpm.get_means</span>, the average number of days of power cut can be calculated.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">avg_cut_days</span> <span class="o">=</span> <span class="p">{}</span>
<span class="k">for</span> <span class="n">h</span> <span class="ow">in</span> <span class="n">cut_lin</span><span class="p">.</span><span class="n">keys</span><span class="p">():</span>
    <span class="n">days</span> <span class="o">=</span> <span class="n">Mhs</span><span class="p">[</span><span class="n">h</span><span class="p">].</span><span class="n">get_means</span><span class="p">(</span> <span class="p">[</span><span class="n">h</span><span class="p">]</span> <span class="p">)</span>
    <span class="n">avg_cut_days</span><span class="p">[</span><span class="n">h</span><span class="p">]</span> <span class="o">=</span> <span class="n">days</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>

<span class="k">print</span><span class="p">(</span><span class="n">avg_cut_days</span><span class="p">)</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{'h0': 0.07110250000000003, 'h1': 0.1549099875, 'h2': 0.08022550000000005, 'h3': 0.03758214298500002, 'h4': 0.16464348097007506, 'h5': 0.1408909975000001, 'h6': 0.26823448751250006}
</code></pre></div></div>

<h1 id="mapping">Mapping</h1>

<p>To better understand the risks, we map the failure probabilities of structures (i.e. substations and poles) and the average number of affected days for houses.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Locations for mapping
</span><span class="n">xdist</span><span class="p">,</span> <span class="n">ydist</span> <span class="o">=</span> <span class="mf">0.8</span><span class="p">,</span> <span class="mf">1.0</span>
<span class="n">locs</span> <span class="o">=</span> <span class="p">{</span><span class="s">"h0"</span><span class="p">:</span> <span class="p">(</span><span class="o">-</span><span class="n">xdist</span><span class="p">,</span> <span class="o">-</span><span class="n">ydist</span><span class="p">),</span> <span class="s">"h1"</span><span class="p">:</span> <span class="p">(</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="n">xdist</span><span class="p">,</span> <span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="n">ydist</span><span class="p">),</span> <span class="s">"h2"</span><span class="p">:</span> <span class="p">(</span><span class="n">xdist</span><span class="p">,</span> <span class="o">-</span><span class="n">ydist</span><span class="p">),</span> <span class="s">"h3"</span><span class="p">:</span> <span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="n">xdist</span><span class="p">,</span> <span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="n">ydist</span><span class="p">),</span> <span class="s">"h4"</span><span class="p">:</span> <span class="p">(</span><span class="n">xdist</span><span class="p">,</span> <span class="o">-</span><span class="mi">3</span><span class="o">*</span><span class="n">ydist</span><span class="p">),</span> <span class="s">"h5"</span><span class="p">:</span> <span class="p">(</span><span class="mi">5</span><span class="o">*</span><span class="n">xdist</span><span class="p">,</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="n">ydist</span><span class="p">),</span> <span class="s">"h6"</span><span class="p">:</span> <span class="p">(</span><span class="mi">6</span><span class="o">*</span><span class="n">xdist</span><span class="p">,</span> <span class="o">-</span><span class="mi">3</span><span class="o">*</span><span class="n">ydist</span><span class="p">)}</span>
<span class="n">locs</span><span class="p">[</span><span class="s">"s0"</span><span class="p">],</span> <span class="n">locs</span><span class="p">[</span><span class="s">"s1"</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="mf">0.0</span><span class="p">,</span> <span class="mf">0.0</span><span class="p">),</span> <span class="p">(</span><span class="mf">3.5</span><span class="o">*</span><span class="n">xdist</span><span class="p">,</span> <span class="mf">0.0</span><span class="p">)</span>
<span class="n">conn</span> <span class="o">=</span> <span class="p">{</span><span class="s">"p0"</span><span class="p">:</span> <span class="p">(</span><span class="s">'s0'</span><span class="p">,</span> <span class="s">'h0'</span><span class="p">),</span> <span class="s">"p1"</span><span class="p">:</span> <span class="p">(</span><span class="s">'h0'</span><span class="p">,</span> <span class="s">'h1'</span><span class="p">),</span> <span class="s">"p2"</span><span class="p">:</span> <span class="p">(</span><span class="s">'s0'</span><span class="p">,</span> <span class="s">'h2'</span><span class="p">),</span> <span class="s">"p3"</span><span class="p">:</span> <span class="p">(</span><span class="s">'h2'</span><span class="p">,</span> <span class="s">'h3'</span><span class="p">),</span> <span class="s">"p4"</span><span class="p">:</span> <span class="p">(</span><span class="s">'s1'</span><span class="p">,</span> <span class="s">'h3'</span><span class="p">),</span> <span class="s">"p5"</span><span class="p">:</span> <span class="p">(</span><span class="s">'h3'</span><span class="p">,</span> <span class="s">'h4'</span><span class="p">),</span> <span class="s">"p6"</span><span class="p">:</span> <span class="p">(</span><span class="s">'s1'</span><span class="p">,</span> <span class="s">'h5'</span><span class="p">),</span> <span class="s">"p7"</span><span class="p">:</span> <span class="p">(</span><span class="s">'h5'</span><span class="p">,</span> <span class="s">'h6'</span><span class="p">)}</span>

<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n_pole</span><span class="p">):</span>
    <span class="n">p</span> <span class="o">=</span> <span class="s">'p'</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
    <span class="n">locs</span><span class="p">[</span><span class="n">p</span><span class="p">]</span> <span class="o">=</span> <span class="nb">tuple</span><span class="p">(</span> <span class="p">[</span><span class="mf">0.5</span><span class="o">*</span><span class="nb">sum</span><span class="p">(</span><span class="n">tup</span><span class="p">)</span> <span class="k">for</span> <span class="n">tup</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">locs</span><span class="p">[</span><span class="n">conn</span><span class="p">[</span><span class="n">p</span><span class="p">][</span><span class="mi">0</span><span class="p">]],</span> <span class="n">locs</span><span class="p">[</span><span class="n">conn</span><span class="p">[</span><span class="n">p</span><span class="p">][</span><span class="mi">1</span><span class="p">]])]</span> <span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Gather data
</span><span class="n">cd_df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">'name'</span><span class="p">,</span> <span class="s">'loc_x'</span><span class="p">,</span> <span class="s">'loc_y'</span><span class="p">,</span> <span class="s">'avg_cut_days'</span><span class="p">])</span> <span class="c1"># cut days
</span><span class="k">for</span> <span class="n">h</span> <span class="ow">in</span> <span class="n">cut_lin</span><span class="p">.</span><span class="n">keys</span><span class="p">():</span>
    <span class="n">cd_df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">concat</span><span class="p">(</span> <span class="p">[</span><span class="n">cd_df</span><span class="p">,</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span> <span class="p">[[</span><span class="n">h</span><span class="p">,</span> <span class="n">locs</span><span class="p">[</span><span class="n">h</span><span class="p">][</span><span class="mi">0</span><span class="p">],</span> <span class="n">locs</span><span class="p">[</span><span class="n">h</span><span class="p">][</span><span class="mi">1</span><span class="p">],</span> <span class="n">avg_cut_days</span><span class="p">[</span><span class="n">h</span><span class="p">]]],</span> <span class="n">columns</span><span class="o">=</span><span class="n">cd_df</span><span class="p">.</span><span class="n">columns</span> <span class="p">)],</span> <span class="n">ignore_index</span> <span class="o">=</span> <span class="bp">True</span> <span class="p">)</span>

<span class="n">fr_df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span> <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">'name'</span><span class="p">,</span> <span class="s">'loc_x'</span><span class="p">,</span> <span class="s">'loc_y'</span><span class="p">,</span> <span class="s">'pf'</span><span class="p">]</span> <span class="p">)</span> <span class="c1"># failure probabilities 
</span><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n_subs</span><span class="p">):</span>
    <span class="n">x</span> <span class="o">=</span> <span class="s">'xs'</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
    <span class="n">xs</span> <span class="o">=</span> <span class="s">'s'</span> <span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
    <span class="n">Mx</span> <span class="o">=</span> <span class="n">cpm</span><span class="p">.</span><span class="n">cal_Msys_by_cond_VE</span><span class="p">(</span> <span class="n">cpms</span><span class="p">,</span> <span class="nb">vars</span><span class="p">,</span> <span class="p">[</span><span class="s">'haz'</span><span class="p">],</span> <span class="n">VE_ord</span><span class="p">,</span> <span class="n">x</span> <span class="p">)</span>
    <span class="n">pf</span> <span class="o">=</span> <span class="n">cpm</span><span class="p">.</span><span class="n">get_prob</span><span class="p">(</span> <span class="n">Mx</span><span class="p">,</span> <span class="p">[</span><span class="n">x</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="p">)</span>
    <span class="n">fr_df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">concat</span><span class="p">(</span> <span class="p">[</span><span class="n">fr_df</span><span class="p">,</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">([[</span><span class="n">xs</span><span class="p">,</span> <span class="n">locs</span><span class="p">[</span><span class="n">xs</span><span class="p">][</span><span class="mi">0</span><span class="p">],</span> <span class="n">locs</span><span class="p">[</span><span class="n">xs</span><span class="p">][</span><span class="mi">1</span><span class="p">],</span> <span class="n">pf</span><span class="p">]],</span> <span class="n">columns</span><span class="o">=</span><span class="n">fr_df</span><span class="p">.</span><span class="n">columns</span><span class="p">)],</span> <span class="n">ignore_index</span><span class="o">=</span><span class="bp">True</span> <span class="p">)</span>

<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n_pole</span><span class="p">):</span>
    <span class="n">x</span> <span class="o">=</span> <span class="s">'xp'</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
    <span class="n">xs</span> <span class="o">=</span> <span class="s">'p'</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
    <span class="n">Mx</span> <span class="o">=</span> <span class="n">cpm</span><span class="p">.</span><span class="n">cal_Msys_by_cond_VE</span><span class="p">(</span> <span class="n">cpms</span><span class="p">,</span> <span class="nb">vars</span><span class="p">,</span> <span class="p">[</span><span class="s">'haz'</span><span class="p">],</span> <span class="n">VE_ord</span><span class="p">,</span> <span class="n">x</span> <span class="p">)</span>
    <span class="n">pf</span> <span class="o">=</span> <span class="n">cpm</span><span class="p">.</span><span class="n">get_prob</span><span class="p">(</span> <span class="n">Mx</span><span class="p">,</span> <span class="p">[</span><span class="n">x</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="p">)</span>
    <span class="n">fr_df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">concat</span><span class="p">(</span> <span class="p">[</span><span class="n">fr_df</span><span class="p">,</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">([[</span><span class="n">xs</span><span class="p">,</span> <span class="n">locs</span><span class="p">[</span><span class="n">xs</span><span class="p">][</span><span class="mi">0</span><span class="p">],</span> <span class="n">locs</span><span class="p">[</span><span class="n">xs</span><span class="p">][</span><span class="mi">1</span><span class="p">],</span> <span class="n">pf</span><span class="p">]],</span> <span class="n">columns</span><span class="o">=</span><span class="n">fr_df</span><span class="p">.</span><span class="n">columns</span><span class="p">)],</span> <span class="n">ignore_index</span><span class="o">=</span><span class="bp">True</span> <span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">cd_df</span><span class="p">,</span> <span class="s">'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">fr_df</span><span class="p">)</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  name  loc_x  loc_y  avg_cut_days
0   h0   -0.8   -1.0      0.071103
1   h1   -1.6   -2.0      0.154910
2   h2    0.8   -1.0      0.080226
3   h3    1.6   -2.0      0.037582
4   h4    0.8   -3.0      0.164643
5   h5    4.0   -2.0      0.140891
6   h6    4.8   -3.0      0.268234 

  name  loc_x  loc_y      pf
0   s0    0.0    0.0  0.0325
1   s1    2.8    0.0  0.0725
2   p0   -0.4   -0.5  0.0325
3   p1   -1.2   -1.5  0.0725
4   p2    0.4   -0.5  0.0325
5   p3    1.2   -1.5  0.0725
6   p4    2.2   -1.0  0.0325
7   p5    1.2   -2.5  0.0725
8   p6    3.4   -1.0  0.0325
9   p7    4.4   -2.5  0.0725
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fig</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">()</span>
<span class="n">ax</span> <span class="o">=</span> <span class="n">fig</span><span class="p">.</span><span class="n">add_subplot</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>

<span class="k">for</span> <span class="n">x</span><span class="p">,</span> <span class="n">pair</span> <span class="ow">in</span> <span class="n">conn</span><span class="p">.</span><span class="n">items</span><span class="p">():</span>
    <span class="n">loc0</span><span class="p">,</span> <span class="n">loc1</span> <span class="o">=</span> <span class="n">locs</span><span class="p">[</span><span class="n">pair</span><span class="p">[</span><span class="mi">0</span><span class="p">]],</span> <span class="n">locs</span><span class="p">[</span><span class="n">pair</span><span class="p">[</span><span class="mi">1</span><span class="p">]]</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">plot</span><span class="p">([</span><span class="n">loc0</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">loc1</span><span class="p">[</span><span class="mi">0</span><span class="p">]],</span> <span class="p">[</span><span class="n">loc0</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">loc1</span><span class="p">[</span><span class="mi">1</span><span class="p">]],</span> <span class="n">color</span><span class="o">=</span><span class="s">'grey'</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="n">scatter</span><span class="p">(</span><span class="n">cd_df</span><span class="p">[</span><span class="s">'loc_x'</span><span class="p">].</span><span class="n">to_list</span><span class="p">(),</span> <span class="n">cd_df</span><span class="p">[</span><span class="s">'loc_y'</span><span class="p">].</span><span class="n">to_list</span><span class="p">(),</span> <span class="n">c</span> <span class="o">=</span> <span class="n">cd_df</span><span class="p">[</span><span class="s">'avg_cut_days'</span><span class="p">].</span><span class="n">to_list</span><span class="p">(),</span> <span class="n">cmap</span><span class="o">=</span><span class="s">'Reds'</span><span class="p">,</span> <span class="n">s</span><span class="o">=</span><span class="mi">200</span><span class="p">,</span> <span class="n">marker</span><span class="o">=</span><span class="s">"X"</span><span class="p">)</span>
<span class="n">cb1</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">colorbar</span><span class="p">()</span>
<span class="n">cb1</span><span class="p">.</span><span class="n">ax</span><span class="p">.</span><span class="n">set_xlabel</span><span class="p">(</span><span class="s">'Avg. </span><span class="se">\n</span><span class="s"> cut days'</span><span class="p">,</span> <span class="n">size</span> <span class="o">=</span> <span class="mi">15</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="n">scatter</span><span class="p">(</span><span class="n">fr_df</span><span class="p">[</span><span class="s">'loc_x'</span><span class="p">].</span><span class="n">to_list</span><span class="p">(),</span> <span class="n">fr_df</span><span class="p">[</span><span class="s">'loc_y'</span><span class="p">].</span><span class="n">to_list</span><span class="p">(),</span> <span class="n">c</span> <span class="o">=</span> <span class="n">fr_df</span><span class="p">[</span><span class="s">'pf'</span><span class="p">].</span><span class="n">to_list</span><span class="p">(),</span> <span class="n">cmap</span><span class="o">=</span><span class="s">'Reds'</span><span class="p">)</span>
<span class="n">cb2</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">colorbar</span><span class="p">()</span>
<span class="n">cb2</span><span class="p">.</span><span class="n">ax</span><span class="p">.</span><span class="n">set_xlabel</span><span class="p">(</span><span class="s">'Fail. </span><span class="se">\n</span><span class="s"> prob.'</span><span class="p">,</span> <span class="n">size</span> <span class="o">=</span> <span class="mi">15</span><span class="p">)</span>

<span class="n">tx</span><span class="p">,</span> <span class="n">ty</span> <span class="o">=</span> <span class="mf">0.10</span><span class="p">,</span> <span class="mf">0.01</span>
<span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">name</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">cd_df</span><span class="p">[</span><span class="s">'name'</span><span class="p">].</span><span class="n">to_list</span><span class="p">()):</span>
    <span class="n">ax</span><span class="p">.</span><span class="n">text</span><span class="p">(</span><span class="n">cd_df</span><span class="p">[</span><span class="s">'loc_x'</span><span class="p">][</span><span class="n">i</span><span class="p">]</span><span class="o">+</span><span class="n">tx</span><span class="p">,</span> <span class="n">cd_df</span><span class="p">[</span><span class="s">'loc_y'</span><span class="p">][</span><span class="n">i</span><span class="p">]</span><span class="o">+</span><span class="n">ty</span><span class="p">,</span> <span class="n">name</span><span class="p">)</span>
<span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">name</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">fr_df</span><span class="p">[</span><span class="s">'name'</span><span class="p">].</span><span class="n">to_list</span><span class="p">()):</span>
    <span class="n">ax</span><span class="p">.</span><span class="n">text</span><span class="p">(</span><span class="n">fr_df</span><span class="p">[</span><span class="s">'loc_x'</span><span class="p">][</span><span class="n">i</span><span class="p">]</span><span class="o">+</span><span class="n">tx</span><span class="p">,</span> <span class="n">fr_df</span><span class="p">[</span><span class="s">'loc_y'</span><span class="p">][</span><span class="n">i</span><span class="p">]</span><span class="o">+</span><span class="n">ty</span><span class="p">,</span> <span class="n">name</span><span class="p">)</span>

<span class="n">ax</span><span class="p">.</span><span class="n">set_xticks</span><span class="p">([])</span>
<span class="n">ax</span><span class="p">.</span><span class="n">set_yticks</span><span class="p">([])</span>
<span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>

</code></pre></div></div>

<figure>
<img src="/BNS-JT/assets/img/power_house_map.png" style="width:600px" />
</figure>

<p>The figure above shows how the convolution of hazard risks, structural performance, and repair priority decides risks faced by houses.</p>

<p>For example, $H_1$ and $H_5$ show similar risk levels. $H_1$ is farther away from substation than $H_5$ but is connected to structures with higher repair priority. The two factors appear to compensate each other.</p>

<p>$H_3$ has the least risk being connected to both substations. Compared to $H_0$, the effect of such redundancy seems dominating other factors, i.e. structural performance and repair priority.</p>
:ET